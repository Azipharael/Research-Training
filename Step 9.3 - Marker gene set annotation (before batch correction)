import scanpy as sc
import pandas as pd
import matplotlib.pyplot as plt

# --- Manual Annotation using Marker Genes for Liver Data ---
# This self-contained script follows the Scanpy tutorial's logic for
# annotating cell clusters using known marker genes, but adapts it
# specifically for liver tissue.

# Setup Scanpy settings
sc.settings.verbosity = 3
sc.settings.set_figure_params(dpi=80, facecolor='white', frameon=False)

# 1. Load the AnnData object with clustering results
# Make sure this is the correct file containing the 'leiden_res_0.50' column
adata = sc.read_h5ad('Liver_facs_uncorrected_annotated_resolutions.h5ad')

# 2. Define a set of marker genes for expected LIVER cell types
liver_marker_genes = {
    'Hepatocyte': ['Alb', 'Apoa1', 'G6pc'],
    'Kupffer Cell': ['Clec4f', 'Cd68', 'Marco'], # Liver-resident macrophages
    'LSEC': ['Pecam1', 'Stab2', 'Vwf'], # Liver Sinusoidal Endothelial Cells
    'Stellate Cell': ['Acta2', 'Dcn', 'Lrat'], # Also known as Ito cells
    'Cholangiocyte': ['Krt19', 'Sox9', 'Epcam'], # Bile duct cells
    'B cell': ['Cd79a', 'Ms4a1'],
    'T/NK cell': ['Cd3d', 'Nkg7', 'Gzma'], # Grouping T and NK cells for now
}

# 3. Choose a resolution and visualize marker expression with a dotplot
cluster_key_to_annotate = "leiden_res_0.50"
sc.pl.dotplot(adata, liver_marker_genes, groupby=cluster_key_to_annotate, standard_scale="var", show=True)

# 4. Manually map cluster numbers to cell type names based on the dotplot
#
# --- !!! THIS SECTION IS UPDATED BASED ON YOUR ANNOTATION !!! ---
#
# Each cluster number (as a string) is now a unique key in the dictionary.
# For clusters that you assigned to multiple cell types, we create a
# combined label (e.g., 'Hepatocyte/Stellate_mix'). This acknowledges the
# ambiguity in the uncorrected data.

annotation_map = {
    '0': 'LSEC',
    '1': 'Hepatocyte/Stellate_mix', # CONFLICT: Was Hepatocyte AND Stellate Cell
    '2': 'Hepatocyte',
    '3': 'T/NK cell',
    '4': 'Hepatocyte/Cholangiocyte_mix', # CONFLICT: Was Hepatocyte AND Cholangiocyte
    '5': 'Kupffer Cell',
    '6': 'Kupffer Cell',
    '7': 'Hepatocyte',
    '8': 'Hepatocyte',
    '9': 'B cell',
    '10': 'T/NK cell',
    # Add any other cluster numbers here and map them to 'Unknown' if needed
}

# Apply the mapping to create a new annotation column in adata.obs
adata.obs['cell_type'] = adata.obs[cluster_key_to_annotate].map(annotation_map).astype('category')

print("\nFinished mapping cluster numbers to cell type names.")
print("Value counts for the new 'cell_type' annotation:")
print(adata.obs['cell_type'].value_counts())

# 5. Visualize the final annotation on the UMAP
# This is the best way to see if your annotation makes sense spatially.
sc.pl.umap(adata, color='cell_type', legend_loc='on data', title='Manual Cell Type Annotation', show=True)


# 6. Visualize the annotated dotplot
# This plot confirms that your new labels align with the expected marker expression.
# You can now clearly see the mixed-marker profile for your conflicted clusters.
sc.pl.dotplot(adata, liver_marker_genes, groupby='cell_type', standard_scale='var', show=True)

# Optional: Save the final annotated object
adata.write_h5ad('Liver_facs_uncorrected_annotated.h5ad')
